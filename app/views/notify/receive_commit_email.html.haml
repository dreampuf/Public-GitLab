:css
  <!--
  #msg dl { border: 1px #006 solid; background: #369; padding: 6px; color: #fff; }
  #msg dt { float: left; width: 6em; font-weight: bold; }
  #msg dt:after { content:':';}
  #msg dl, #msg dt, #msg ul, #msg li, #header, #footer { font-family: verdana,arial,helvetica,sans-serif; font-size: 10pt;  }
  #msg dl a { font-weight: bold}
  #msg dl a:link    { color:#fc3; }
  #msg dl a:active  { color:#ff0; }
  #msg dl a:visited { color:#cc6; }
  h3 { font-family: verdana,arial,helvetica,sans-serif; font-size: 10pt; font-weight: bold; }
  #msg pre, #msg p { overflow: auto; background: #ffc; border: 1px #fc0 solid; padding: 6px; }
  #msg ul { overflow: auto; }
  #header, #footer { color: #fff; background: #636; border: 1px #300 solid; padding: 6px; }
  #patch { width: 100%; }
  #patch h4 {font-family: verdana,arial,helvetica,sans-serif;font-size:10pt;padding:8px;background:#369;color:#fff;margin:0;}
  #patch .propset h4, #patch .binary h4 {margin:0;}
  #patch div {padding:0;line-height:1.2em;margin:0;}
  #patch .diff {width:100%;background:#eee;padding: 0 0 10px 0;overflow:auto;}
  #patch .propset .diff, #patch .binary .diff  {padding:10px 0;}
  #patch span {display:block;padding:0 10px;}
  #patch .modfile, #patch .addfile, #patch .delfile, #patch .propset, #patch .binary, #patch .copfile {border:1px solid #ccc;margin:10px 0;}
  #patch ins {background:#dfd;text-decoration:none;display:block;padding:0 10px;}
  #patch ins .idiff {background:#C1E0C1;text-decoration:none;display:block;padding:0 10px;display:inline;}
  #patch del {background:#fdd;text-decoration:none;display:block;padding:0 10px;}
  #patch del .idiff {background:#AF9797;text-decoration:none;display:block;padding:0 10px;display:inline;}
  #patch .lines, .info {color:#888;background:#fff;}
  .difffiles .deleted-file {color:#fdd;text-decoration:none;display:block;padding:0 10px;}
  .difffiles .renamed-file {color:#AA9A66;text-decoration:none;display:block;padding:0 10px;}
  .difffiles .new-file {color:#dfd;text-decoration:none;display:block;padding:0 10px;}
  .difffiles .edit-file {color:#AA9A66;text-decoration:none;display:block;padding:0 10px;}
  -->

#msg
  %dl
    %dt Revision
    %dd
      %a{href: root_url + project_compare_path(@project, from: @data[:before], to: @data[:after])} "Compare #{@data[:before][0..7]}...#{@data[:after][0..7]}"
    %dt Branch
    %dd #{ @ref }
    %dt Author
    %dd #{ @user.username }
    %dt Date
    %dd #{ @time_now }
    %dt Commits
    %dd #{ @commits.count }

  - Commit.decorate(@commits).each do |commit|
    %h3 #{ commit.id[0..7] } - Log Message
    %pre #{ commit.message }
    %a{href: commit[:url] } #{commit[:url]}

%h3 Modified Paths
%ul.difffiles
  - @diffs.each_with_index do |diff, i|
    %li
      - if diff.deleted_file
        %span.deleted-file
          %a{href: "#diff-#{i}"}
            = diff.old_path
      - elsif diff.renamed_file
        %span.renamed-file
          %a{href: "#diff-#{i}"}
            = diff.old_path
            = "->"
            = diff.new_path
      - elsif diff.new_file
        %span.new-file
          %a{href: "#diff-#{i}"}
            = diff.new_path
      - else
        %span.edit-file
          %a{href: "#diff-#{i}"}
            = diff.new_path
#patch
  %h3 Diff
  - @diffs.each_with_index do |diff, i|
    - next if diff.diff.empty?
    - file = Gitlab::Git::Blob.new(@project.repository, @commit.id, @ref, diff.new_path)
    - file = Gitlab::Git::Blob.new(@project.repository, @commit.parent_id, @ref, diff.old_path) unless file.exists?
    - next unless file.exists?
    %a(id="diff-#{i}")
    .modfile
      %h4 
        - if diff.deleted_file
          Deleted: #{ diff.old_path }
        - elsif diff.renamed_file
          Renamed: #{ diff.old_path } -> #{ diff.new_path }
        - elsif diff.new_file
          Added : #{ diff.new_path }
        - else
          Modified: #{ diff.new_path }
      %div.diff
        - too_big = diff.diff.lines.count > 1000
        - if too_big
          %a Diff too big. Plase view it in website.
        %span
          - each_diff_line(diff, i) do |line, type, line_code, line_new, line_old, raw_line|
            - if type == "match"
              %span.info #{line}
            - elsif type == "old"
              %del= raw diff_line_content(line)
            - elsif type == "new"
              %ins= raw diff_line_content(line)
